FUNCTIONS

SELECT *
FROM customers;

SELECT *
INTO tmp_customers
FROM customers;  

SELECT *
FROM tmp_customers;

UPDATE tmp_customers
SET region = 'unkonown'
WHERE region is NULL;

CREATE OR REPLACE FUNCTION fix_customer_region() RETURNS void AS $$ -- простая функция 
	UPDATE tmp_customers
	SET region = 'unkonown'
	WHERE region is NULL;
$$ language SQL;

SELECT fix_customer_region();






CREATE OR REPLACE FUNCTION get_total_number_of_goods() RETURNS bigint AS $$
	SELECT SUM (units_in_stock)
	FROM products 
$$ LANGUAGE SQL;

SELECT get_total_number_of_goods() AS total_goods;

CREATE OR REPLACE FUNCTION get_avg_price() RETURNS float8 AS $$ --Скралярные функции--
	SELECT AVG (unit_price)
	FROM products 
$$ LANGUAGE SQL;

SELECT get_avg_price() AS avg_price;








CREATE OR REPLACE FUNCTION get_product_price_by_name(prod_name varchar) RETURNS real AS $$
	SELECT unit_price
	FROM products
	WHERE product_name = prod_name
$$ LANGUAGE SQL;

SELECT get_product_price_by_name ('Chocolade') AS price; --функция, пишешь продукт, он тебе выдает цену--

SELECT *
FROM products

CREATE OR REPLACE FUNCTION get_price_boundaries_by_discontinuity(IN is_discontinued int, OUT max_price real, OUT min_price real) AS $$ --фнкция, выдает границу макс и мин цены--
	SELECT MAX (unit_price), MIN (unit_price)
	FROM products
	WHERE discontinued = is_discontinued
$$ LANGUAGE SQL;

SELECT get_price_boundaries ();

SELECT *
FROM get_price_boundaries ();

--функция которая возвращает границы цены по дисконтинуиди--

CREATE OR REPLACE FUNCTION get_price_boundaries_by_discontinuity(IN is_discontinued int , OUT max_price real, OUT min_price real) AS $$ --фнкция, выдает границу макс и мин цены--
	SELECT MAX (unit_price), MIN (unit_price)
	FROM products
	WHERE discontinued = is_discontinued
$$ LANGUAGE SQL;

SELECT get_price_boundaries_by_discontinuity (1);
SELECT * FROM get_price_boundaries_by_discontinuity (1);

--фнкция дефолт

CREATE OR REPLACE FUNCTION get_price_boundaries_by_discontinuity(IN is_discontinued int DEFAULT 1, OUT max_price real, OUT min_price real) AS $$ --фнкция, выдает границу макс и мин цены--
	SELECT MAX (unit_price), MIN (unit_price)
	FROM products
	WHERE discontinued = is_discontinued
$$ LANGUAGE SQL;


SELECT * FROM get_price_boundaries_by_discontinuity ();
SELECT * FROM get_price_boundaries_by_discontinuity (0);
SELECT * FROM get_price_boundaries_by_discontinuity (1);










--если нам нужно вернуть средние цены, разбитые по категориям продуктов--

CREATE OR REPLACE FUNCTION get_average_prices_by_prod_categories() 
		RETURNS SETOF double precision AS $$
	SELECT AVG (unit_price)
	FROM products
	GROUP BY category_id
$$ LANGUAGE SQL;

SELECT * FROM get_average_prices_by_prod_categories() as average_prices;

--напишем функцию которая возвращает набор двух значений, функция которая берет
--сумму по юнит прайс и АВГ по юнит прайс
DROP FUNCTION get_avg_prices_by_pro_categor;
CREATE OR REPLACE FUNCTION get_avg_prices_by_pro_categor(OUT sum_price real, OUT avg_price float8)
	RETURNS SETOF RECORD AS $$
	SELECT SUM (unit_price), AVG (unit_price)
	FROM products
	GROUP BY category_id	
$$ LANGUAGE SQL;	

SELECT sum_price FROM get_avg_prices_by_pro_categor ();
SELECT sum_price, avg_price FROM get_avg_prices_by_pro_categor ()


--другая функция, когда не указываем оут параметры--

CREATE OR REPLACE FUNCTION get_avg_prices_by_pro_categor()
	RETURNS SETOF RECORD AS $$
	SELECT SUM (unit_price), AVG (unit_price)
	FROM products
	GROUP BY category_id	
$$ LANGUAGE SQL;	

SELECT sum_price FROM get_avg_prices_by_pro_categor ();
SELECT sum_price, avg_price FROM get_avg_prices_by_pro_categor ()
SELECT * FROM get_avg_prices_by_pro_categor ()

SELECT * FROM get_avg_prices_by_pro_categor () AS (sum_price real, avg_price float8);


--функция которая возвращает клиентов по стране, страна будет входным аргументов--

CREATE OR REPLACE FUNCTION get_customers_by_country(customer_country varchar)
		RETURNS TABLE (char_code char, company_name varchar) AS $$
	SELECT customer_id, company_name
	FROM customers
	WHERE country = customer_country

$$ LANGUAGE SQL;

SELECT * FROM get_customers_by_country('USA')
SELECT company_name FROM get_customers_by_country('USA')
SELECT char_code, company_name FROM get_customers_by_country('USA')


DROP FUNCTION get_customers_by_country;
--модификация функции--
CREATE OR REPLACE FUNCTION get_customers_by_country(customer_country varchar)
		RETURNS SETOF customers AS $$ 
	SELECT *
	FROM customers
	WHERE country = customer_country

$$ LANGUAGE SQL;

SELECT * FROM get_customers_by_country('USA')
SELECT company_name FROM get_customers_by_country('USA')
SELECT contact_name AS contact, company_name FROM get_customers_by_country('USA')
